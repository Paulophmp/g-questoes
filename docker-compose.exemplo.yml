version: '3.5'
services:
  db-service:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    container_name: questoes-db
    environment:
        - MYSQL_DATABASE=gc_questoes
        - MYSQL_USER=gc_questoes
        - MYSQL_PASSWORD=questoes@123456
        - MYSQL_ROOT_PASSWORD=root
    ports:
        - "3307"
    expose:
        - "3307"
    volumes:
        - ./docker-data/mysql:/var/lib/mysql
        - ./docker-data/migrate:/docker-entrypoint-initdb.d
    networks:
        - gran_network
      
  web-service:
    build: ./web
    image: clebersantos/node:10
    container_name: questoes-web
    healthcheck:
      test: ["CMD", "curl", "-sS", "http://localhost:8080"]
      interval: 20s
      timeout: 5s
      retries: 3
    volumes:
      - ./webapp:/home/node/app
    command:
      sh -c 'npm i && npm run serve'
    ports:
      - "8088:8080"
    environment:
      - NODE_CONFIG_ENV=development
      - NODE_ENV=development
      - VUE_APP_API_HOST=localhost
      - VUE_APP_API_PORT=88
    links:
      - api-service:questoes-api
    networks:
      - gran_network

  api-service:
    container_name: questoes-api
    build: ./api
    image: clebersantos/php-fpm:1.2.1
    working_dir: /application
    volumes:
      - ./api:/application
      - ./api/docker/php-fpm/php-ini-overrides.ini:/etc/php/7.2/fpm/conf.d/99-overrides.ini
    environment:
      - UPDATE_COMPOSER_DEPENDENCIES=true
      - USE_PHP_FPM=true
      - DB_CONNECTION=mysql
      - APP_ENV=local
      - APP_DEBUG=true
      - APP_KEY=
      - APP_TIMEZONE=UTC
      - DB_HOST=db-service
      - DB_PORT=3307
      - DB_DATABASE=gc_questoes
      - DB_USERNAME=gc_questoes
      - DB_PASSWORD=questoes@123456
    depends_on:
      - db-service
    links:
      - db-service
    restart: on-failure
    networks:
      - gran_network
  webserver:
    build:
      context: ./api
      dockerfile: WebserverDockerfile
      args:
        EXPOSE_PORT: 80
    image: clebersantos/questoes-webserver-nginx:1.0.0
    container_name: questoes-webserver
    working_dir: /application
    volumes:
     - ./api:/application
     - ./api/docker/webserver/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "88:80"
    depends_on:
      - api-service
    networks:
      - gran_network
networks:
  gran_network:
    name: gran_network
    driver: bridge